<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="groupe_classement_permutation_i32.mlw"/>
<theory name="GroupeClassementPermutation" proved="true">
 <goal name="voeu&#39;vc" expl="VC for voeu" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="13697"/></proof>
 </goal>
 <goal name="permutation&#39;vc" expl="VC for permutation" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="16655"/></proof>
 </goal>
 <goal name="shift_seq_equal" proved="true">
 <proof prover="2"><result status="valid" time="0.08" steps="25965"/></proof>
 </goal>
 <goal name="shift_seq_length" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="26807"/></proof>
 </goal>
 <goal name="homogenic_rest" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="42457"/></proof>
 </goal>
 <goal name="in_range_rest" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="42620"/></proof>
 </goal>
 <goal name="is_none&#39;vc" expl="VC for is_none" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="17705"/></proof>
 </goal>
 <goal name="get_some&#39;vc" expl="VC for get_some" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="16760"/></proof>
 </goal>
 <goal name="occ_array_non_negative" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="19115"/></proof>
 </goal>
 <goal name="occ_all_non_negative" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="20582"/></proof>
 </goal>
 <goal name="occ_array_zero&#39;vc" expl="VC for occ_array_zero" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="25315"/></proof>
 </goal>
 <goal name="l1" proved="true">
 <proof prover="2"><result status="valid" time="0.09" steps="25796"/></proof>
 </goal>
 <goal name="l2" proved="true">
 <proof prover="2"><result status="valid" time="0.09" steps="25999"/></proof>
 </goal>
 <goal name="aux1" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="aux2" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="l3" proved="true">
 <transf name="unfold" proved="true" arg1="occ_array">
  <goal name="l3.0" proved="true">
  <transf name="unfold" proved="true" arg1="numof">
   <goal name="l3.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="([]&#39;)">
    <goal name="l3.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.95" steps="115403"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="l4" proved="true">
 <transf name="unfold" proved="true" arg1="occ_array">
  <goal name="l4.0" proved="true">
  <transf name="unfold" proved="true" arg1="numof">
   <goal name="l4.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="([]&#39;)">
    <goal name="l4.0.0.0" proved="true">
    <proof prover="0"><result status="valid" time="0.42" steps="582510"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="l5" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="l5.0" proved="true">
  <transf name="instantiate" proved="true" arg1="numof_strictly_increasing" arg2="(fun (i1:int) -&gt; get1 s i1 = x),0,0,i,s.length1">
   <goal name="l5.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="177354"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int32exists&#39;vc" expl="VC for int32exists" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="17848"/></proof>
 </goal>
 <goal name="ordre_appel&#39;vc" expl="VC for ordre_appel" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ordre_appel&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="22003"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="21975"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="22658"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="26303"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="25377"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="19736"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="31731"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="21141"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="21174"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="21181"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.10" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ordre_appel&#39;vc.10.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.44" steps="56639"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.10.1" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="1.46" steps="177107"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.10.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.76" steps="116335"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.10.3" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.72" steps="113825"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ordre_appel&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.44" steps="57226"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.11.1" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="1.24" steps="177486"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.11.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="1.02" steps="118382"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.11.3" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.71" steps="115462"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.20" steps="33824"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="34164"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.27" steps="516"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="369"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="24902"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="25295"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="25666"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="26031"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="20541"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="26892"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.22" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="25934"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.23" expl="array creation size" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="26305"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.24" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="28583"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.25" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.26" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="62"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.27" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="27430"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.28" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="33489"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.29" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="33561"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.30" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="27702"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.31" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="41920"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.32" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="21628"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.33" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="21004"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.34" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="32363"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.35" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="31911"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.36" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="34506"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.37" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="35097"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.38" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="35666"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.39" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="36447"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.40" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="22708"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.41" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="37267"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.42" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="37834"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.43" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="38466"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.44" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="37561"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.45" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.19" steps="142"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.46" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="38560"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.47" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="28566"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.48" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="39153"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.49" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.20" steps="145"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.50" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.28" steps="40189"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.51" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="28803"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.52" expl="assertion" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.42" steps="747"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.53" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="21697"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.54" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="21919"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.55" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="1.27" steps="120363"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.56" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="22247"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.57" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="275"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.58" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.87" steps="105361"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.59" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="23759"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.60" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="22175"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.61" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="1.36" steps="128201"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.62" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="22503"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.63" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.31" steps="522"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.64" expl="assertion" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.73" steps="896"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.65" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.14" steps="128"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.66" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="22429"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.67" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="1.35" steps="110598"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.68" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="22757"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.69" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.44" steps="746"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.70" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.69" steps="725"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.71" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="130"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.72" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.42" steps="546"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.73" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.47" steps="686551"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.74" expl="precondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.08" steps="22679"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.75" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="58429"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.76" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ordre_appel&#39;vc.76.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ordre_appel&#39;vc.76.0.0" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.19" steps="172"/></proof>
    </goal>
    <goal name="ordre_appel&#39;vc.76.0.1" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.57" steps="769"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ordre_appel&#39;vc.76.1" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ordre_appel&#39;vc.76.1.0" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.20" steps="172"/></proof>
    </goal>
    <goal name="ordre_appel&#39;vc.76.1.1" expl="assertion" proved="true">
    <proof prover="3"><result status="valid" time="0.71" steps="1441"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.77" expl="assertion" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.11" steps="1483"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.78" expl="assertion" proved="true">
  <transf name="destruct_rec" proved="true" arg1="some_queue">
   <goal name="ordre_appel&#39;vc.78.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="83192"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.78.1" expl="assertion" proved="true">
   <proof prover="3" timelimit="30"><result status="valid" time="7.67" steps="2155"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.78.2" expl="assertion" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="2.16" steps="214157"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.78.3" expl="assertion" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="1.56" steps="221883"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.79" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="128"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.80" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="130"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.81" expl="precondition" proved="true">
  <proof prover="2" timelimit="15"><result status="valid" time="0.82" steps="117014"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.82" expl="precondition" proved="true">
  <proof prover="2" timelimit="15"><result status="valid" time="1.28" steps="121642"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.83" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="130"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.84" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.20" steps="121442"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.85" expl="precondition" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="1.46" steps="130112"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.86" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.43" steps="138828"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.87" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.28" steps="40742"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.88" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="40358"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.89" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="26562"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.90" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="26648"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.91" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="1.22" steps="99474"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.92" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ordre_appel&#39;vc.92.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.32" steps="516"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.92.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.37" steps="491"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.93" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.22" steps="196"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.94" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ordre_appel&#39;vc.94.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.57" steps="58013"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.94.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.66" steps="59221"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.94.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.75" steps="61094"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.94.3" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.68" steps="63877"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.95" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ordre_appel&#39;vc.95.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.59" steps="59071"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.95.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.59" steps="60282"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.95.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.60" steps="62142"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.95.3" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="5"><result status="valid" time="0.47" steps="64933"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.96" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="1.42" steps="158621"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.97" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="1.70" steps="147417"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.98" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="1.03" steps="150524"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.99" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="15"><result status="valid" time="1.99" steps="159448"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.100" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="j=m">
   <goal name="ordre_appel&#39;vc.100.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="3"><result status="valid" time="0.34" steps="234"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.100.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="3" timelimit="30"><result status="valid" time="11.63" steps="9002"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.101" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="j=i">
   <goal name="ordre_appel&#39;vc.101.0" expl="true case (loop invariant preservation)" proved="true">
   <transf name="destruct_rec" proved="true" arg1="shifted_queue">
    <goal name="ordre_appel&#39;vc.101.0.0" expl="true case (loop invariant preservation)" proved="true">
    <proof prover="3"><result status="valid" time="0.71" steps="441"/></proof>
    </goal>
    <goal name="ordre_appel&#39;vc.101.0.1" expl="true case (loop invariant preservation)" proved="true">
    <proof prover="3"><result status="valid" time="0.58" steps="484"/></proof>
    </goal>
    <goal name="ordre_appel&#39;vc.101.0.2" expl="true case (loop invariant preservation)" proved="true">
    <proof prover="3"><result status="valid" time="0.59" steps="485"/></proof>
    </goal>
    <goal name="ordre_appel&#39;vc.101.0.3" expl="true case (loop invariant preservation)" proved="true">
    <proof prover="3"><result status="valid" time="0.43" steps="420"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ordre_appel&#39;vc.101.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="2"><result status="valid" time="1.53" steps="135095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.102" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="j=i">
   <goal name="ordre_appel&#39;vc.102.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="3"><result status="valid" time="0.27" steps="234"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.102.1" expl="false case (loop invariant preservation)" proved="true">
   <proof prover="2"><result status="valid" time="1.29" steps="135304"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.103" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="j=m">
   <goal name="ordre_appel&#39;vc.103.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="3"><result status="valid" time="0.50" steps="453"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.103.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="instantiate" proved="true" arg1="LoopInvariant8" arg2="j">
    <goal name="ordre_appel&#39;vc.103.1.0" expl="false case (loop invariant preservation)" proved="true">
    <transf name="destruct_rec" proved="true" arg1="some_queue">
     <goal name="ordre_appel&#39;vc.103.1.0.0" expl="false case (loop invariant preservation)" proved="true">
     <proof prover="3" timelimit="5"><result status="valid" time="1.99" steps="1711"/></proof>
     </goal>
     <goal name="ordre_appel&#39;vc.103.1.0.1" expl="false case (loop invariant preservation)" proved="true">
     <proof prover="3" timelimit="5"><result status="valid" time="2.92" steps="1860"/></proof>
     </goal>
     <goal name="ordre_appel&#39;vc.103.1.0.2" expl="false case (loop invariant preservation)" proved="true">
     <proof prover="3" timelimit="5"><result status="valid" time="4.27" steps="2936"/></proof>
     </goal>
     <goal name="ordre_appel&#39;vc.103.1.0.3" expl="false case (loop invariant preservation)" proved="true">
     <proof prover="3" timelimit="5"><result status="valid" time="4.25" steps="3171"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.104" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="j=m">
   <goal name="ordre_appel&#39;vc.104.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="3"><result status="valid" time="0.30" steps="235"/></proof>
   </goal>
   <goal name="ordre_appel&#39;vc.104.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="instantiate" proved="true" arg1="LoopInvariant8" arg2="j">
    <goal name="ordre_appel&#39;vc.104.1.0" expl="false case (loop invariant preservation)" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="ordre_appel&#39;vc.104.1.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.06" steps="26076"/></proof>
     </goal>
     <goal name="ordre_appel&#39;vc.104.1.0.1" expl="false case (loop invariant preservation)" proved="true">
     <transf name="case" proved="true" arg1="(occ_all j (seq qBR1) + occ_all j (seq qBnR1) + occ_all j (seq qnBR1) + occ_all j (seq qnBnR1) = 1)">
      <goal name="ordre_appel&#39;vc.104.1.0.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
      <transf name="destruct_rec" proved="true" arg1="H4">
       <goal name="ordre_appel&#39;vc.104.1.0.1.0.0" expl="false case (true case. loop invariant preservation)" proved="true">
       <proof prover="2"><result status="valid" time="0.27" steps="48464"/></proof>
       </goal>
       <goal name="ordre_appel&#39;vc.104.1.0.1.0.1" expl="false case (true case. loop invariant preservation)" proved="true">
       <proof prover="2"><result status="valid" time="0.49" steps="56902"/></proof>
       </goal>
       <goal name="ordre_appel&#39;vc.104.1.0.1.0.2" expl="false case (true case. loop invariant preservation)" proved="true">
       <proof prover="2"><result status="valid" time="0.63" steps="60403"/></proof>
       </goal>
       <goal name="ordre_appel&#39;vc.104.1.0.1.0.3" expl="false case (true case. loop invariant preservation)" proved="true">
       <proof prover="2"><result status="valid" time="0.56" steps="58356"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ordre_appel&#39;vc.104.1.0.1.1" expl="false case (loop invariant preservation)" proved="true">
      <transf name="assert" proved="true" arg1="(occ_array j map1 0 i = 1)">
       <goal name="ordre_appel&#39;vc.104.1.0.1.1.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="0.75" steps="76593"/></proof>
       </goal>
       <goal name="ordre_appel&#39;vc.104.1.0.1.1.1" expl="false case (loop invariant preservation)" proved="true">
       <proof prover="0"><result status="valid" time="0.18" steps="339090"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.105" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25" steps="36444"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.106" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="36375"/></proof>
  </goal>
  <goal name="ordre_appel&#39;vc.107" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="int32exists" arg2="i">
   <goal name="ordre_appel&#39;vc.107.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="61518"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.108" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="int32exists" arg2="i">
   <goal name="ordre_appel&#39;vc.108.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.85" steps="63220"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ordre_appel&#39;vc.109" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="24982"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
